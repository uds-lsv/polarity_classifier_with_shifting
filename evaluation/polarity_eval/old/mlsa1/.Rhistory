summary(dsys)
summary(d1)
dsys == d1
result = dsys == d1
View(result)
summary(result)
# Read in annotaded mlsa data
df = read.table('sentences.tsv', header=TRUE, sep="\t")
# Remove unnecessary columns, only keep the polarity majority column.
keep = c("pol_majority")
d1 = df[keep]
# Read in the output of the bachelor system
dsys = read.table('system_polarities_mlsa1.txt', header=FALSE)
# Change negative numbers to "-", positive to "+", keep 0s.
# First change factors to be numbers
#dsys[, 1] = as.numeric(dsys[, 1])
dsys[dsys < 0]= "-"
dsys[dsys > 0]= "+"
summary(dsys)
summary(d1)
result = dsys == d1
summary(result)
# Read in annotaded mlsa data
df = read.table('sentences.tsv', header=TRUE, sep="\t")
# Remove unnecessary columns, only keep the polarity majority column.
keep = c("pol_majority")
d1 = df[keep]
# Read in the output of the bachelor system
dsys = read.table('system_polarities_mlsa1.txt', header=FALSE)
# Change negative numbers to "-", positive to "+", keep 0s.
# First change factors to be numbers
#dsys[, 1] = as.numeric(dsys[, 1])
dsys[dsys < 0]= "-"
dsys[dsys > 0]= "+"
summary(dsys)
summary(d1)
result = dsys == d1
summary(result)
dsys2 = read.table('system_polarities_mlsa1_germanlex_extended.txt', header=FALSE)
dsys2[dsys < 0]= "-"
dsys2[dsys > 0]= "+"
dsys2[dsys2 < 0]= "-"
dsys2[dsys2 > 0]= "+"
# Read in annotaded mlsa data
df = read.table('sentences.tsv', header=TRUE, sep="\t")
# Remove unnecessary columns, only keep the polarity majority column.
keep = c("pol_majority")
d1 = df[keep]
# Read in the output of the bachelor system
dsys = read.table('system_polarities_mlsa1.txt', header=FALSE)
dsys2 = read.table('system_polarities_mlsa1_germanlex_extended.txt', header=FALSE)
# Change negative numbers to "-", positive to "+", keep 0s.
# First change factors to be numbers
#dsys[, 1] = as.numeric(dsys[, 1])
dsys[dsys < 0]= "-"
dsys[dsys > 0]= "+"
dsys2[dsys2 < 0]= "-"
dsys2[dsys2 > 0]= "+"
summary(dsys)
summary(d1)
result = dsys == d1
summary(result)
summary(dsys)
summary(d1)
summary(dsys2)
# Read in annotaded mlsa data
df = read.table('sentences.tsv', header=TRUE, sep="\t")
# Remove unnecessary columns, only keep the polarity majority column.
keep = c("pol_majority")
d1 = df[keep]
# Read in the output of the bachelor system
dsys = read.table('system_polarities_mlsa1.txt', header=FALSE)
dsys2 = read.table('system_polarities_mlsa1_germanlex_extended.txt', header=FALSE)
# Change negative numbers to "-", positive to "+", keep 0s.
# First change factors to be numbers
#dsys[, 1] = as.numeric(dsys[, 1])
dsys[dsys < 0]= "-"
dsys[dsys > 0]= "+"
dsys2[dsys2 < 0]= "-"
dsys2[dsys2 > 0]= "+"
summary(dsys)
summary(dsys2)
summary(d1)
result = dsys == d1
summary(result)
# Read in annotaded mlsa data
df = read.table('sentences.tsv', header=TRUE, sep="\t")
# Remove unnecessary columns, only keep the polarity majority column.
keep = c("pol_majority")
d1 = df[keep]
# Read in the output of the bachelor system
dsys = read.table('system_polarities_mlsa1.txt', header=FALSE)
dsys2 = read.table('system_polarities_mlsa1_germanlex_extended.txt', header=FALSE)
# Change negative numbers to "-", positive to "+", keep 0s.
# First change factors to be numbers
#dsys[, 1] = as.numeric(dsys[, 1])
dsys[dsys < 0]= "-"
dsys[dsys > 0]= "+"
dsys2[dsys2 < 0]= "-"
dsys2[dsys2 > 0]= "+"
summary(dsys)
summary(dsys2)
summary(d1)
result = dsys == d1
summary(result)
result2 = dsys2 == d1
summary(result)
summary(result2)
sanity = dsys == dsys2
summary(sanity)
# Read in annotaded mlsa data
df = read.table('sentences.tsv', header=TRUE, sep="\t")
# Remove unnecessary columns, only keep the polarity majority column.
keep = c("pol_majority")
d1 = df[keep]
# Read in the output of the bachelor system
dsys = read.table('1.0-scores.txt', header=FALSE)
dsys2 = read.table('2.0-scores.txt', header=FALSE)
dsys3 = read.table('3.0-scores.txt', header=FALSE)
# Change negative numbers to "-", positive to "+", keep 0s.
# First change factors to be numbers
dsys[dsys < 0]= "-"
dsys[dsys > 0]= "+"
dsys2[dsys2 < 0]= "-"
dsys2[dsys2 > 0]= "+"
dsys3[dsys3 < 0]= "-"
dsys3[dsys3 > 0]= "+"
#summary(dsys)
#summary(dsys2)
#summary(d1)
#result = dsys == d1
#result2 = dsys2 == d1
#summary(result)
#summary(result2)
View(d1)
View(dsys)
View(dsys2)
View(dsys3)
summary(dsys)
summary(dsys2)
summary(d1)
dsys[dsys < 0]= "-"
dsys[dsys > 0]= "+"
dsys2[dsys2 < 0]= "-"
dsys2[dsys2 > 0]= "+"
dsys3[dsys3 < 0]= "-"
dsys3[dsys3 > 0]= "+"
result = dsys == d1
dsys[, 1] = as.numberic(dsys[, 1])
# Read in annotaded mlsa data
df = read.table('sentences.tsv', header=TRUE, sep="\t")
# Remove unnecessary columns, only keep the polarity majority column.
keep = c("pol_majority")
d1 = df[keep]
# Read in the output of the bachelor system
dsys = read.table('system_polarities_mlsa1.txt', header=FALSE)
dsys2 = read.table('system_polarities_mlsa1_germanlex_extended.txt', header=FALSE)
# Change negative numbers to "-", positive to "+", keep 0s.
# First change factors to be numbers
#dsys[, 1] = as.numeric(dsys[, 1])
dsys[dsys < 0]= "-"
dsys[dsys > 0]= "+"
dsys2[dsys2 < 0]= "-"
dsys2[dsys2 > 0]= "+"
summary(dsys)
summary(dsys2)
summary(d1)
result = dsys == d1
result2 = dsys2 == d1
summary(result)
summary(result2)
sanity = dsys == dsys2
summary(sanity)
summary(dsys)
dsys[dsys < 0]= "-"
dsys[dsys > 0]= "+"
dsys[dsys < 0]= "-"
# Read in annotaded mlsa data
df = read.table('sentences.tsv', header=TRUE, sep="\t")
# Remove unnecessary columns, only keep the polarity majority column.
keep = c("pol_majority")
d1 = df[keep]
# Read in the output of the bachelor system
dsys = read.table('1.0-scores.txt', header=FALSE) # system standard
dsys2 = read.table('2.0-scores.txt', header=FALSE) # system no shifter
dsys3 = read.table('3.0-scores.txt', header=FALSE) # system negation only
View(dsys2)
dsys[dsys < 0]= "-"
dsys[dsys > 0]= "+"
summary(dsys)
dsys2[dsys2 < 0]= "-"
dsys2[dsys2 > 0]= "+"
dsys3[dsys3 < 0]= "-"
dsys3[dsys3 > 0]= "+"
summary(dsys2)
summary(d1)
result = dsys == d1
result2 = dsys2 == d1
result3 = dsys3 == d1
summary(result)
summary(result2)
summary(result3)
summary(dsys)
summary(dsys2)
View(d1)
View(dsys)
View(d1)
summary(d1)
summary(dsys)
summary(d1)
dsys[dsys < 0]= -
dsys[dsys > 0]= "+"
dsys[dsys < 0]= '-'
dsys[dsys > 0]= '+'
dsys = read.table('1.0-scores.txt', header=FALSE) # system standard
dsys[dsys < 0]= '-'
dsys[dsys > 0]= '+'
summary(dsys)
(dsys == "-")
count(dsys == "-")
library(plyr)
library(plyr)
install.packages(pkgs="plyr")
library(plyr)
count(dsys == "-")
summary(dsys)
dsys = read.table('1.0-scores.txt', header=FALSE) # system standard
count(dsys == "-")
dsys[dsys < 0]= '-'
dsys[dsys > 0]= '+'
count(dsys == "-")
summary(d1)
count(dsys == "+")
count(dsys == "0")
summary(d1)
count(dsys == "0")
count(dsys == "+")
count(dsys == "-")
dsys2 = read.table('2.0-scores.txt', header=FALSE) # system no shifter
dsys2[dsys2 < 0]= "-"
dsys2[dsys2 > 0]= "+"
summary(dsys2)
count(dsys2 == "-")
count(dsys2 == "+")
count(dsys2 == "0")
dsys3 = read.table('3.0-scores.txt', header=FALSE) # system negation only
dsys3[dsys3 < 0]= "-"
dsys3[dsys3 > 0]= "+"
count(dsys3 == "0")
count(dsys3 == "-")
count(dsys3 == "+")
dsys4 = read.table('1.0-scores.txt', header=FALSE) # system standard, count 0.3 as 0
dsys4[dsys4 < 0] = "-"
dsys4[dsys4 > 0] = "+"
dsys4[dsys4 == -0.3] = "0"
dsys4[dsys4 == 0.3] = "0"
count(dsys4 == "+")
dsys4 = read.table('1.0-scores.txt', header=FALSE) # system standard, count 0.3 as 0
dsys4[dsys4 == -0.3] = "0"
dsys4[dsys4 == 0.3] = "0"
dsys4[dsys4 < 0] = "-"
dsys4[dsys4 > 0] = "+"
count(dsys4 == "+")
count(dsys4 == "-")
count(dsys4 == "0")
library(plyr)
library(plyr)
# Read in annotaded mlsa data
df = read.table('sentences.tsv', header=TRUE, sep="\t")
# Remove unnecessary columns, only keep the polarity majority column.
keep = c("pol_majority")
d1 = df[keep]
# Read in the output of the bachelor system
dsys = read.table('1.0-scores.txt', header=FALSE) # system standard
dsys2 = read.table('2.0-scores.txt', header=FALSE) # system no shifter
dsys3 = read.table('3.0-scores.txt', header=FALSE) # system negation only
dsys4 = read.table('1.0-scores.txt', header=FALSE) # system standard, count 0.3 as 0
# Change negative numbers to "-", positive to "+", keep 0s.
# First change factors to be numbers
#dsys[, 1] = as.numberic(dsys[, 1])
dsys[dsys < 0]= '-'
dsys[dsys > 0]= '+'
dsys2[dsys2 < 0]= "-"
dsys2[dsys2 > 0]= "+"
dsys3[dsys3 < 0]= "-"
dsys3[dsys3 > 0]= "+"
dsys4[dsys4 == -0.3] = "0"
dsys4[dsys4 == 0.3] = "0"
dsys4[dsys4 < 0] = "-"
dsys4[dsys4 > 0] = "+"
#summary(dsys)
#count(dsys == "-")
#summary(dsys2)
#count(dsys2 == "0")
#count(dsys4 == "0")
#summary(d1)
result = dsys == d1
result2 = dsys2 == d1
result3 = dsys3 == d1
result4 = dsys4 == d1
#summary(result)
#summary(result2)
#summary(result3)
summary(result)
summary(result2)
summary(result3)
summary(result4)
tp = dsys == "+" && dsys == d1
View(dsys)
View(d1)
View(d1)
write.table(dsys, "1.0-dsys.txt", sep="\t")
write.table(dsys, "1.0-dsys.txt")
View(dsys)
write.table(dsys$V1, "1.0-dsys.txt")
write.table(dsys$V1, "1.0-dsys.txt", row.names=FALSE)
write.table(d1$V1, "gold.txt", row.names=FALSE)
df = read.table('sentences.tsv', header=TRUE, sep="\t")
keep = c("pol_majority")
d1 = df[keep]
write.table(d1$V1, "gold.txt", row.names=FALSE)
View(d1)
write.table(d1$pol_majority, "gold.txt", row.names=FALSE)
dsys2 = read.table('2.0-scores.txt', header=FALSE) # system no shifter
dsys3 = read.table('3.0-scores.txt', header=FALSE) # system negation only
dsys4 = read.table('1.0-scores.txt', header=FALSE) # system standard, count 0.3 as 0
dsys2[dsys2 < 0]= "-"
dsys2[dsys2 > 0]= "+"
write.table(dsys2$V1, "2.0-dsys2.txt", row.names=FALSE)
dsys3[dsys3 < 0]= "-"
dsys3[dsys3 > 0]= "+"
write.table(dsys3$V1, "3.0-dsys3.txt", row.names=FALSE)
dsys4[dsys4 == -0.3] = "0"
dsys4[dsys4 == 0.3] = "0"
dsys4[dsys4 < 0] = "-"
dsys4[dsys4 > 0] = "+"
write.table(dsys4$V1, "4.0-dsys4.txt", row.names=FALSE)
library(plyr)
# Read in annotaded mlsa data
df = read.table('sentences.tsv', header=TRUE, sep="\t")
# Remove unnecessary columns, only keep the polarity majority column.
keep = c("pol_majority")
d1 = df[keep]
View(df)
View(d1)
dsys = read.table('1.0-scores.txt', header=FALSE) # system standard
dsys2 = read.table('2.0-scores.txt', header=FALSE) # system no shifter
dsys3 = read.table('3.0-scores.txt', header=FALSE) # system negation only
dsys4 = read.table('1.0-scores.txt', header=FALSE) # system standard, count 0.3 as 0
dsys[dsys > -0.4 & dsys < 0.4] = "0"
dsys[dsys < 0]= '-'
dsys[dsys > 0]= '+'
View(dsys)
View(dsys)
dsys[dsys > -0.4 & dsys < 0.4] = "0"
dsys[dsys < 0]= '-'
dsys[dsys > 0]= '+'
dsys2[dsys2 > -0.4 & dsys2 < 0.4] = "0"
dsys2[dsys2 < 0]= "-"
dsys2[dsys2 > 0]= "+"
dsys3[dsys3 > -0.4 & dsys3 < 0.4] = "0"
dsys3[dsys3 < 0]= "-"
dsys3[dsys3 > 0]= "+"
dsys4[dsys4 > -0.4 & dsys4 < 0.4] = "0"
dsys4[dsys4 < 0] = "-"
dsys4[dsys4 > 0] = "+"
summary(dsys)
count(dsys == "-")
count(dsys4 == "0")
result = dsys == d1
summary(result)
result2 = dsys2 == d1
result3 = dsys3 == d1
result4 = dsys4 == d1
summary(result)
summary(result2)
summary(result3)
summary(result4)
result = dsys == d1
library(plyr)
# Read in annotaded mlsa data
df = read.table('sentences.tsv', header=TRUE, sep="\t")
# Remove unnecessary columns, only keep the polarity majority column.
keep = c("pol_majority")
d1 = df[keep]
# Read in the output of the bachelor system
dsys = read.table('1.0-scores.txt', header=FALSE) # system standard
dsys2 = read.table('2.0-scores.txt', header=FALSE) # system no shifter
dsys3 = read.table('3.0-scores.txt', header=FALSE) # system negation only
dsys4 = read.table('1.0-scores.txt', header=FALSE) # system standard, count 0.3 as 0
# Change negative numbers to "-", positive to "+", keep 0s.
# First change factors to be numbers
#dsys[, 1] = as.numberic(dsys[, 1])
dsys[dsys > -0.4 & dsys < 0.4] = "0"
dsys[dsys < 0]= '-'
dsys[dsys > 0]= '+'
dsys2[dsys2 > -0.4 & dsys2 < 0.4] = "0"
dsys2[dsys2 < 0]= "-"
dsys2[dsys2 > 0]= "+"
dsys3[dsys3 > -0.4 & dsys3 < 0.4] = "0"
dsys3[dsys3 < 0]= "-"
dsys3[dsys3 > 0]= "+"
dsys4[dsys4 > -0.4 & dsys4 < 0.4] = "0"
dsys4[dsys4 < 0] = "-"
dsys4[dsys4 > 0] = "+"
#write.table(dsys1$V1, "1.1-dsys.txt", row.names=FALSE)
#summary(dsys)
#count(dsys == "-")
#summary(dsys2)
#count(dsys2 == "0")
#count(dsys4 == "0")
#summary(d1)
result = dsys == d1
result2 = dsys2 == d1
result3 = dsys3 == d1
result4 = dsys4 == d1
summary(result)
summary(result2)
summary(result3)
summary(result4)
# P, R, F
# + case
tp = dsys == "+" && dsys == d1
result = dsys == d1
summary(result)
summary(result4)
summary(result2)
summary(result3)
write.table(dsys1$V1, "1.1-dsys.txt", row.names=FALSE)
write.table(dsys2$V1, "2.1-dsys.txt", row.names=FALSE)
write.table(dsys3$V1, "3.1-dsys.txt", row.names=FALSE)
write.table(dsys4$V1, "1.1-dsys.txt", row.names=FALSE)
library(plyr)
# Read in annotaded mlsa data
df = read.table('sentences.tsv', header=TRUE, sep="\t")
# Remove unnecessary columns, only keep the polarity majority column.
keep = c("pol_majority")
d1 = df[keep]
# Read in the output of the bachelor system
dsys = read.table('1.0-scores.txt', header=FALSE) # system standard
dsys2 = read.table('2.0-scores.txt', header=FALSE) # system no shifter
dsys3 = read.table('3.0-scores.txt', header=FALSE) # system negation only
dsys4 = read.table('1.0-scores.txt', header=FALSE) # system standard, count 0.3 as 0
# Change negative numbers to "-", positive to "+", keep 0s.
# First change factors to be numbers
#dsys[, 1] = as.numberic(dsys[, 1])
dsys[dsys > -0.4 & dsys < 0.4] = "0"
dsys[dsys < 0]= '-'
dsys[dsys > 0]= '+'
dsys2[dsys2 > -0.4 & dsys2 < 0.4] = "0"
dsys2[dsys2 < 0]= "-"
dsys2[dsys2 > 0]= "+"
dsys3[dsys3 > -0.4 & dsys3 < 0.4] = "0"
dsys3[dsys3 < 0]= "-"
dsys3[dsys3 > 0]= "+"
dsys4[dsys4 > -0.4 & dsys4 < 0.4] = "0"
dsys4[dsys4 < 0] = "-"
dsys4[dsys4 > 0] = "+"
write.table(dsys4$V1, "1.1-dsys.txt", row.names=FALSE)
library(plyr)
# Read in annotaded mlsa data
df = read.table('sentences.tsv', header=TRUE, sep="\t")
# Remove unnecessary columns, only keep the polarity majority column.
keep = c("pol_majority")
d1 = df[keep]
# Read in the output of the bachelor system
dsys = read.table('1.0-scores.txt', header=FALSE) # system standard
dsys2 = read.table('2.0-scores.txt', header=FALSE) # system no shifter
dsys3 = read.table('3.0-scores.txt', header=FALSE) # system negation only
dsys4 = read.table('1.0-scores.txt', header=FALSE) # system standard, count 0.3 as 0
# Change negative numbers to "-", positive to "+", keep 0s.
# First change factors to be numbers
#dsys[, 1] = as.numberic(dsys[, 1])
dsys[dsys > -0.4 & dsys < 0.4] = "0"
dsys[dsys < 0]= '-'
dsys[dsys > 0]= '+'
dsys2[dsys2 > -0.4 & dsys2 < 0.4] = "0"
dsys2[dsys2 < 0]= "-"
dsys2[dsys2 > 0]= "+"
dsys3[dsys3 > -0.4 & dsys3 < 0.4] = "0"
dsys3[dsys3 < 0]= "-"
dsys3[dsys3 > 0]= "+"
dsys4[dsys4 > -0.4 & dsys4 < 0.4] = "0"
dsys4[dsys4 < 0] = "-"
dsys4[dsys4 > 0] = "+"
#write.table(dsys4$V1, "1.1-dsys.txt", row.names=FALSE)
#summary(dsys)
#count(dsys == "-")
#summary(dsys2)
#count(dsys2 == "0")
#count(dsys4 == "0")
#summary(d1)
result = dsys == d1
result2 = dsys2 == d1
result3 = dsys3 == d1
result4 = dsys4 == d1
summary(result)
summary(result2)
summary(result3)
summary(result4)
# P, R, F
# + case
tp = dsys == "+" && dsys == d1
summary(result4)
summary(result2)
summary(result)
summary(result3)
dsys3 = read.table('3.0-scores.txt', header=FALSE) # system negation only
dsys3[dsys3 > -0.4 & dsys3 < 0.4] = "0"
dsys3[dsys3 < 0]= "-"
dsys3[dsys3 > 0]= "+"
summary(result3)
